Bubble Sort, a straightforward sorting algorithm, iteratively traverses the list, compares adjacent elements, and swaps them if needed. This process continues until the entire list is sorted.

First Pass:

Commence with the array [7, 4, 2, 9, 1].
Examine adjacent elements:

    Compare 7 and 4: Since 7 > 4, swap them: [4, 7, 2, 9, 1].
    Compare 7 and 2: Since 7 > 2, swap them: [4, 2, 7, 9, 1].
    Compare 7 and 9: No swap required.
    Compare 9 and 1: Since 9 > 1, swap them: [4, 2, 7, 1, 9].

Result after First Pass: [4, 2, 7, 1, 9]

Second Pass:

Continue the process for the remaining unsorted elements:

    Compare 4 and 2: Since 4 > 2, swap them: [2, 4, 7, 1, 9].
    Compare 4 and 7: No swap necessary.
    Compare 7 and 1: Since 7 > 1, swap them: [2, 4, 1, 7, 9].

Result after Second Pass: [2, 4, 1, 7, 9]

Third Pass:

Iterate through the process:

    Compare 2 and 4: No swap needed.
    Compare 4 and 1: Since 4 > 1, swap them: [2, 1, 4, 7, 9].

Result after Third Pass: [2, 1, 4, 7, 9]

Fourth Pass:

Continue the process:

    Compare 2 and 1: Since 2 > 1, swap them: [1, 2, 4, 7, 9].

Result after Fourth Pass: [1, 2, 4, 7, 9]

Fifth Pass:

No swaps required as the array is already sorted.

Result after Fifth Pass: [1, 2, 4, 7, 9]

The sorted array is [1, 2, 4, 7, 9].
